
import dialogs.*;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author jose.lemes
 */
public class ContaCorrenteView extends javax.swing.JFrame {

    private NovaContaDialog novaContaDialog;    
    private ExibeContasDialog exibeContasDialog;
    private SaqueContaDialog saqueContaDialog;
    private DepositoContaDialog depositoContaDialog;
    private ConsultaSaldoDialog consultaSaldoDialog;
    /**
     * Creates new form ContaCorrenteView
     */
    public ContaCorrenteView() {        
        initComponents();        
        novaContaDialog = new NovaContaDialog(this, false);    
        exibeContasDialog = new ExibeContasDialog(this, false);
        saqueContaDialog = new SaqueContaDialog(this, false);
        depositoContaDialog = new DepositoContaDialog(this, false);
        consultaSaldoDialog = new ConsultaSaldoDialog(this, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        menu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        novaContaMenuItem = new javax.swing.JMenuItem();
        exibirContasMenuItem = new javax.swing.JMenuItem();
        saqueMenuItem = new javax.swing.JMenuItem();
        depositoMenuItem = new javax.swing.JMenuItem();
        consultaSaldoMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle de Contas Correntes");

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 415, Short.MAX_VALUE)
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        jMenu1.setText("Conta Corrente");

        novaContaMenuItem.setText("Nova Conta");
        novaContaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novaContaMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(novaContaMenuItem);

        exibirContasMenuItem.setText("Exibir Contas Cadastradas");
        jMenu1.add(exibirContasMenuItem);

        saqueMenuItem.setText("Saque");
        saqueMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saqueMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(saqueMenuItem);

        depositoMenuItem.setText("Depósito");
        depositoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositoMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(depositoMenuItem);

        consultaSaldoMenuItem.setText("Consulta Saldo");
        consultaSaldoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaSaldoMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(consultaSaldoMenuItem);

        menu.add(jMenu1);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void novaContaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novaContaMenuItemActionPerformed
        // TODO add your handling code here:
        novaContaDialog.setVisible(true);        
    }//GEN-LAST:event_novaContaMenuItemActionPerformed

    private void saqueMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saqueMenuItemActionPerformed
        // TODO add your handling code here:
        saqueContaDialog.setVisible(true);
    }//GEN-LAST:event_saqueMenuItemActionPerformed

    private void depositoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositoMenuItemActionPerformed
        // TODO add your handling code here:
        depositoContaDialog.setVisible(true);
    }//GEN-LAST:event_depositoMenuItemActionPerformed

    private void consultaSaldoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaSaldoMenuItemActionPerformed
        // TODO add your handling code here:
        consultaSaldoDialog.setVisible(true);
                
    }//GEN-LAST:event_consultaSaldoMenuItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem consultaSaldoMenuItem;
    private javax.swing.JMenuItem depositoMenuItem;
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JMenuItem exibirContasMenuItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenuItem novaContaMenuItem;
    private javax.swing.JMenuItem saqueMenuItem;
    // End of variables declaration//GEN-END:variables

    /////////////////////////////////////////////////////////
    //Adiciona Listeners
    protected void addNovaContaListener( ActionListener listener ) {
        novaContaDialog.getBtnSalvar().addActionListener(listener);
    }    
    
    protected void addExibeContasListener( ActionListener listener ) {
        exibirContasMenuItem.addActionListener(listener);
    }
    
    protected void addSacarValorListener( ActionListener listener ) {
        saqueContaDialog.getBtnSacar().addActionListener(listener);
    }
    
    protected void addDepositarValorListener( ActionListener listener ) {
        depositoContaDialog.getBtnDepositar().addActionListener(listener);
    }
    
    protected void addConsultaSaldoListener( ActionListener listener ) {
        consultaSaldoDialog.getBtnConsultar().addActionListener(listener);
    }
    
    ////////////////////////////////////
    //Métodos para o Controller
    
    protected void showMsg(String msg) {
        JOptionPane.showMessageDialog(rootPane, msg);
    }
    
    protected void exibeContas(ArrayList<ContaCorrenteModel> contas) {
        exibeContasDialog.exibeContas(contas);
        exibeContasDialog.setVisible(true);
    }    

    protected ContaCorrenteModel getNovaConta() {        
        try{        
            int contaId = (Integer.parseInt(novaContaDialog.getContaId().getText()) );
            String contaSenha = novaContaDialog.getContaSenha().getText();

            int agenciaNumero = Integer.parseInt(novaContaDialog.getAgenciaNumero().getText() );                
            String agenciaNome = novaContaDialog.getAgenciaNumero().getText();
            Agencia agencia = new Agencia(agenciaNumero, agenciaNome);

            int correntistaId = Integer.parseInt(novaContaDialog.getCorrentistaId().getText());
            String correntistaNome = novaContaDialog.getCorrentistaNome().getText();
            Correntista correntista = new Correntista(correntistaId, correntistaNome);

            ContaCorrenteModel conta = new ContaCorrenteModel(contaId, contaSenha, agencia, correntista);

            return conta;
        }catch (NumberFormatException e){
            showMsg("Valor Inválido!");
            return null;
        }
    }    

    protected int getContaDepositoId() throws NumberFormatException {
        return Integer.parseInt(depositoContaDialog.getId().getText());        
    }

    protected BigDecimal getContaDepositoValor() throws NumberFormatException {        
        return new BigDecimal(depositoContaDialog.getValor().getText());
    }

    protected int getContaSaqueId()  throws NumberFormatException {
        return Integer.parseInt( saqueContaDialog.getId().getText());
    }

    protected String getContaSaqueSenha() {
        return saqueContaDialog.getSenha().getText();
    }

    protected BigDecimal getContaSaqueValor() throws NumberFormatException {
        return new BigDecimal(saqueContaDialog.getValor().getText());
    }
    
    protected int getContaConsultaId() throws NumberFormatException {
        return Integer.parseInt(consultaSaldoDialog.getId().getText());
    }
    
}
